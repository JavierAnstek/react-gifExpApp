{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"yMA+BeA,EA5BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAClB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACI,sBAAMC,SAVS,SAACC,GAEhBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKlB,SACI,uBAAOO,KAAK,OAAOC,MAAOT,EAC1BU,SAAW,SAACP,GAAQF,EAAcE,EAAEQ,OAAOF,a,+BClB1CG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,iDAEoCC,UAAUH,GAF9C,+DAGCI,MAAMF,GAHP,cAGZG,EAHY,gBAIKA,EAAKC,OAJV,uBAIVC,EAJU,EAIVA,KAGFC,EAAOD,EAAKE,KAAK,SAACC,GACpB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAXvB,kBAeXM,GAfW,4CAAH,sDCCNO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECDwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OANAC,qBAAW,WAEPxB,EAAOC,GAAUwB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CAAEf,KAAMkB,EAAML,SAAS,SAC/D,CAACpB,IAGGqB,EDdwBK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAIpB,OACI,qCACI,6BAAKpB,IACJoB,GAAW,0CACZ,qBAAKJ,UAAU,YAAf,SACMH,EAAOJ,KAAK,SAACC,GAAD,OAAS,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEM9CgB,EAlBM,WAEjB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACI,qCACI,gDAEA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEE2C,EAAWnB,KAAK,SAACT,EAAU6B,GAAX,OAAiB,cAAC,EAAD,CAAiB7B,SAAUA,GAAb6B,Y,MCX7DC,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cf22d23a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    // va a manejar el enter\r\n    const sendSubmit = (e) => {\r\n        // previene el sumbit\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue, ...cats ] );\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={sendSubmit}>\r\n            <input type=\"text\" value={inputValue} \r\n            onChange={ (e) => { setInputValue(e.target.value) } }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n// valida los parametros requeridos\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default AddCategory\r\n","// llama la API de Gif\r\nexport const getGif = async (category) => {\r\n    // petición a la Api\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=n6fdiGRswKeolTGG4tTDAddOVGoAvfGx`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    \r\n    // mapea la data para poder trabajar solo con los datos que nos interesan\r\n    const gifs = data.map( (img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    }); \r\n\r\n    return gifs\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","// import React, { useEffect, useState } from 'react'\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    /** Usa el custom hooks */\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    // console.log(data, loading);\r\n    // Información a retornar\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>Loading..</p>}\r\n            <div className=\"card-grid\">\r\n                { images.map( (img) => <GifGridItem key={img.id} {...img} /> ) }\r\n            </div>\r\n        </> \r\n    )\r\n}\r\n","// todos los hooks comienzan con use en su nombre de archivo\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { getGif } from '../helpers/getGifs';\r\n\r\n/** Creación de un custom hooks */\r\nexport const useFetchGifs = (category) => {\r\n    // utiliza un useState\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    // utilza useEffec para controlar el renderizado de la información\r\n    // si la categoría cambia, entonces se recarga la aplicación\r\n    useEffect( () => {\r\n        // realiza la petición de las imagenes\r\n        getGif(category).then(imgs => setState({ data: imgs, loading: false }))\r\n    }, [category]);\r\n\r\n    // retorna valores\r\n    return state; // { data: [], loading: true };\r\n}\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    // crea el hook de categorias\r\n    const [categories, setCategories] = useState(['Samurai X']);\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            {/* Componente para agregar categorías */}\r\n            <AddCategory setCategories={ setCategories }/>   \r\n            <hr/>\r\n            <ol>\r\n            {/* Renderiza el componente de categorías grid */}\r\n            { categories.map( (category, i) => <GifGrid key={i} category={category} /> ) }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  // <App />\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}